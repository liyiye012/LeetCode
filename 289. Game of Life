class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int m=board.size(), n=m ? board[0].size() : 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int count =0;  // the number of the live cells in the board
                for(int I=max(i-1,0);I<min(i+2,m);++I) //search the live cell of the neighbors
                    for(int J=max(j-1,0);J<min(j+2,n);++J)
                        count += board[I][J] &1;
                if(count ==3 || count- board[i][j]==3) // count==3 means 
                    board[i][j] |=2;// Bitwise or   0->2  1->3  2->2  3->3
            }
        }
        
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                board[i][j] >>=1;// %2
        //state 0: dead turn into dead
        //state 1: live turn into live
        //state 2: live turn into dead
        //state 3: dead turn into live
    }
};
