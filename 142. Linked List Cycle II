/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL||head->next==NULL||head->next->next==NULL)
            return NULL;
        ListNode *slow=head;
        ListNode *fast=head;
        fast=fast->next->next;  
        slow=slow->next;
        while(fast!=NULL&&fast!=slow&&fast->next!=NULL&&fast->next->next!=NULL){
            fast=fast->next->next;
            slow=slow->next;
        }
        if(fast==NULL||fast->next==NULL||fast->next->next==NULL) return NULL;
        //return slow;
        if(fast==slow) {
            fast=head;
            //cout<<"哦哦哦哦哦"<<endl;               
        }
        while(fast!=slow){
            fast=fast->next;
            slow=slow->next;
        }
        return slow;
    }
};
