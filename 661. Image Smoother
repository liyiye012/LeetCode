class Solution {
public:
    void output(vector<vector<int>> M){
        cout<<"======================="<<endl;
         int row=M.size();
        int col=M[0].size();
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                cout<<M[i][j]<<" ";
            }
            cout<<endl;
        }
        cout<<"===================="<<endl;
    }
    vector<vector<int>> imageSmoother(vector<vector<int>>& M) {
        int row=M.size();
        int col=M[0].size();
        if(row==0 || col==0) return M;
        vector<vector<int>> dirs={{0,1},{0,-1},{1,0},{-1,0},{-1,-1},{1,1},{1,-1},{-1,1} };
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                int sum=M[i][j],cnt=1;
                for(int k=0;k<dirs.size();k++){
                    int x=i+dirs[k][0],y=j+dirs[k][1];
                    if(x<0 || x>row-1 || y<0 || y>col-1) continue;
                    sum+=(M[x][y] & 0xFF);
                    cnt++;
                }
                M[i][j] |= ((sum/cnt)<<8);
            }
        }
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                M[i][j] >>=8;
            }
        }
        return M;
    }
};
