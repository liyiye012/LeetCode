class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> res;
        int startindex=lower_bound(nums,target);
        int endindex=lower_bound(nums,target+1)-1;
        //cout<<"startindex="<<startindex<<"  endindex="<<endindex<<endl;
        if(startindex<nums.size() && nums[startindex]== target){
        res.push_back(startindex);
        res.push_back(endindex);
        }
        else {
            res.push_back(-1);
            res.push_back(-1);
        }
        return res;
    }
    int lower_bound(vector<int> & nums,int target){
        int l=0,r=nums.size()-1;
        while(l<=r){
            int mid=(r-l)/2+l;
           // cout<<"l="<<l<<"   r＝"<<r<<endl;
            if(nums[mid]<target){
                l=mid+1;
            }
            else {
                r=mid-1;
            }
        }
        
        return l;
    }
};
