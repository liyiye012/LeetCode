class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> list;
        vector<int> temp;
        sort(nums.begin(), nums.end());
        backtrack(list , temp, nums, 0);
        return list;
    }
private:
    void backtrack(vector<vector<int>> &list, vector<int> &temp, vector<int> &nums, int start){
        list.push_back(temp);
        for(int i=start;i<nums.size();i++){
            if(i>start && nums[i] == nums[i-1]) continue;
            temp.push_back(nums[i]);
            backtrack(list, temp, nums,i+1);
            temp.pop_back();
        }
        
    }
};
