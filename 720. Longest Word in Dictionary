class Solution {
public:
    string longestWord(vector<string>& words) {
        unordered_set<string> s;
        for(auto w: words) s.insert(w);
        sort(words.begin(),words.end(), [](auto &a,auto &b){ return a.length()==b.length() ? a<b : a.length()>b.length();});
        //for(auto w:s) cout<<w<<" ";cout<<endl;
        for(auto str: words){
            bool prefix=true;
            //cout<<"begin to "<<str<<endl;
            for(int i=1;i<str.length();i++){ //error 不能从i=0开始，否则set中没有""前缀
                //cout<<str<<" count="<<s.count(str.substr(0,i))<<endl;
                if(s.count(str.substr(0,i))==0) {prefix=false;break;}
            }
            if(prefix) return str;
        }
        
        
        return "";
    }
    
};
