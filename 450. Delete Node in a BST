/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        // if(!root) return NULL;
        // if(root->val==key){
        //     if(!root->right){
        //         TreeNode* left=root->left;
        //         delete root;
        //         return left;
        //     }else{
        //         TreeNode *right=root->right;
        //         while(right->left)
        //             right=right->left;
        //         swap(root->val,right->val);
        //     }
        // }
        // root->left=deleteNode(root->left,key);
        // root->right=deleteNode(root->right,key);
        // return root;
        if( !root )
        return nullptr;
    
    if( root->val == key ){
        if( !root->right )
            return root->left;
        else{
            TreeNode* n = root->right;
            while( n->left )
                n = n->left;
            swap( n->val , root->val );
            
            root->right = deleteNode( root->right , key );
            return root;
        }
    }
    
    if( root->val > key )
        root->left = deleteNode( root->left , key );
    if( root->val < key )
        root->right = deleteNode( root->right , key );
    return root;
    }
    
};
