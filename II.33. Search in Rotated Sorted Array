class Solution {
public:
    int search(vector<int>& nums, int target) {
        int lo=0,hi=nums.size();
        while(lo<hi){
            int mid=lo+((hi-lo)>>1);
            //If nums[mid] and target are “on the same side” of nums[0], we just take nums[mid].(double num= ((nums[mid]<nums[0])==(target<nums[0])) ? nums[mid] : ) 
            //Otherwise we use -infinity or +infinity as needed. (target< nums[0] ? -INFINITY: INFINITY)
           int num=((target<nums[0]==nums[mid]<nums[0])) ? nums[mid] : (target<nums[0] ? -INFINITY : INFINITY);
            
            //cout<<"mid="<<mid<<endl;
            if(num<target) lo=mid+1;
            else if(num>target) hi=mid;
            else return mid;
            
        }
        return -1;
    }
};
