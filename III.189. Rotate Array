class Solution {
public:
    // void rotate(vector<int>& nums, int k) {
    //     vector<int> t = nums;
    //     for (int i = 0; i < nums.size(); ++i) {
    //         nums[(i + k) % nums.size()] = t[i];
    //         output(nums);
    //     }
    // }
    void rotate(vector<int>& nums, int k) {
        if(nums.size()<k) k=k%nums.size();
        reverse(nums,0,nums.size()-k-1);
        reverse(nums,nums.size()-k,nums.size()-1);
        reverse(nums,0,nums.size()-1);
    }
private:
    void reverse(vector<int> &nums,int start,int end){
         while(start<end){
             int temp=nums[start];
             nums[start]=nums[end];
             nums[end]=temp;
             start++;
             end--;
         }
    }
    void output(vector<int> nums){
        cout<<"***********************"<<endl;
        for(int i=0;i<nums.size();i++){
            cout<<nums[i]<<" ";
        }
        cout<<endl;
    }
};
