class Solution {
public:
    int maxProfit(vector<int>& prices) {
  // //      int profit=0;
  //       int max=0;
  //  //     if(prices.size()==0) return max;
  //       for(int i=0;i<prices.size();i++){
  //           for(int j=i+1;j<prices.size();j++){
  //           if((prices[j]-prices[i])>max) max=prices[j]-prices[i];
  //           // if(profit>max) max=profit;
  //             //  cout<<"profit="<<profit<<"   max="<<profit<<endl;
  //           }
  //       }
  //       return max;
//           int maxCur = 0, maxSoFar = 0;
//         for(int i = 1; i < prices.size(); i++) {
//             maxCur = max(0, maxCur+= prices[i] - prices[i-1]);
            
//             maxSoFar = max(maxCur, maxSoFar);
//             cout<<"i="<<i<<"   maxCur="<<maxCur<<"    maxSoFar="<<maxSoFar<<endl;
//         }
//         return maxSoFar;
    int minPrice=INT_MAX;
    int maxpro=0;
    for(int i=0;i<prices.size();i++){
        minPrice=min(minPrice,prices[i]);//find the min of the price
        maxpro=max(maxpro,prices[i]-minPrice); //find the max profit from the price
    }
        return maxpro;
    }
};
