#include<iostream>
#include<vector>
using namespace std;
class Solution{
public:
    void output(vector<vector<bool>> dp) {
        int row = dp.size();
        int col = dp[0].size();
        cout << "================================" << endl;
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (dp[i][j]) cout << "O";
                else cout << "X";
            }
            cout << endl;
        }
        cout << "================================" << endl;
    }
    bool isMatch(string s, string p) {
        int m = s.size(), n = p.size();
        vector<vector<bool>> dp(m + 1, vector<bool>(n + 1, false));
        dp[0][0] = true;
        for (int i = 1; i <= n; ++i) {
            if (p[i - 1] == '*') dp[0][i] = dp[0][i - 1];
        }
        output(dp);
        for (int i = 1; i <= m; ++i) {
            for (int j = 1; j <= n; ++j) {
                if (p[j - 1] == '*') {
                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1];
                }
                else {
                    dp[i][j] = (s[i - 1] == p[j - 1] || p[j - 1] == '?') && dp[i - 1][j - 1];
                }
                output(dp);
            }
        }
        return dp[m][n];
    }
};
int main(void) {
    Solution sol;
    string s = "aa";
    string p = "*";
    if (sol.isMatch(s, p)) cout << "True" << endl;
    else cout << "False" << endl;
    return 0;
}
