翻转对问题的关键思想非常简单：分解数组解决子问题
分解数组很自然的提醒我们想起子数组，为了理顺我们下列的讨论，让我们假设输入数组是nums，总共有n个元素，
令nums[i,j]标记为从下标i到j的子数组（闭区间），T(i,j)作为子数组上应用的同样的问题（例如，对于翻转对来说，T(i,j)代表
子数组nums[i,j]总共的翻转对数量）
通过上面的定义，将我们的问题标记为T(0,n-1)，现在关键点是如何从子问题中构建原始问题的解，本质上等同于建立一个针对T(i,j)的递推关系。
因此如果我们能够从子问题中找到T(i,j)的解，我们肯定能够建立一个更大子数组的解知道最终扩展到整个的数组。
尽管也许有很多种方式建立T(i,j)的递归关系式，现在我会仅介绍下列两种通用的：
1.T(i,j)=T(i,j-1)+C  ，等同于元素将会被顺序处理，C标记子问题用于处理子数组nums[i,j]的最后一个元素，我们会叫这个为顺序递推关系。
2.T(i,j)=T(i,m)+T(m+1,j)+C ，m=(i+j)/2,等同于子数组nums[i,j]将会被进一步划分为两个部分，C代表将两个部分结合在一起的子问题，
我们将会叫这个为分区递推关系。
对任意一个情况，
